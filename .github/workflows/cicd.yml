name: KBOT-CICD

on:
  push:
    branches: [ main ]  # або "develop", якщо ти працюєш у dev-гілці
  pull_request:
    branches: [ main ]

env:
  TARGETARCH: amd64
  TARGETOS: linux
  CGO_ENABLED: 0

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22'
          cache: true

      - name: Lint Go code
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m

      - name: Run tests
        run: make test

      - name: Build binary
        run: make build TARGETARCH=${{ env.TARGETARCH }} TARGETOS=${{ env.TARGETOS }}

  cd:
    name: CD
    needs: ci
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22'
          cache: true

      - name: Set VERSION
        run: |
          VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Using version: $VERSION"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ bossman22 }}
          password: ${{ dckr_pat_jHB4w3YUaEBXM3iO_AYoWgisu2A }}

      - name: Build and push Docker image to ghcr.io
        env:
          APP: "kbot"
          REGISTRY: "ghcr.io/${{ github.repository_owner }}"
          TARGETARCH: ${{ env.TARGETARCH }}
          TARGETOS: ${{ env.TARGETOS }}
        run: |
          make image push TARGETARCH=$TARGETARCH TARGETOS=$TARGETOS VERSION=$VERSION

      - name: Update Helm values.yaml
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.image.tag=strenv(VERSION) | .image.arch=strenv(TARGETARCH) | .image.os=strenv(TARGETOS)' helm/values.yaml

      - name: Commit updated Helm values.yaml
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          if ! git diff --quiet helm/values.yaml; then
            git add helm/values.yaml
            git commit -m "chore: update image tag to $VERSION"
            git push
          else
            echo "No changes in helm/values.yaml"
          fi

      - name: Cleanup build artifacts
        run: make clean TARGETARCH=${{ env.TARGETARCH }}
